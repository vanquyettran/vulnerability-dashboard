import './Popup.less';
import React, {forwardRef, ReactNode, Ref} from 'react';
import LayoutPortal from '../document-portal/DocumentPortal';
import Icon from '../icon/Icon';

export interface PopupProps {
    title?: string,
    appearLocally?: boolean,
    close?: () => void,
    children: ReactNode,
}

export default forwardRef(function Popup(
    {
        title,
        appearLocally = false,
        close,
        children,
    }: PopupProps,
    ref: Ref<HTMLDivElement>,
) {
    const renderPopup = () => {
        return (
            <div
                className={[
                    'Popup',
                    appearLocally && 'appear-locally',
                ]}
                ref={ref}
            >
                <div
                    className="modal"
                    onClick={close && (() => {
                        close();
                    })}
                />
                <div className="overlay">
                    {
                        title !== undefined ?
                            <>
                                <div className="header">
                                    <div className="title">
                                        {title}
                                    </div>
                                    {close && (
                                        <button
                                            type="button"
                                            className="popup-close-button"
                                            onClick={() => close()}
                                        >
                                            <Icon name="times"/>
                                        </button>
                                    )}
                                </div>
                                <div className="body">
                                    {children}
                                </div>
                            </>
                            :
                            <>
                                {children}
                                {close && (
                                    <button
                                        type="button"
                                        className="popup-close-button"
                                        onClick={() => close()}
                                    >
                                        <Icon name="times"/>
                                    </button>
                                )}
                            </>
                    }
                </div>
            </div>
        );
    };

    if (appearLocally) {
        return renderPopup();
    }

    return <LayoutPortal>
        {renderPopup()}
    </LayoutPortal>;
});
