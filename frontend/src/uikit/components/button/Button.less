@import "uikit/css/mixin";

.Button {
    display: inline-block;
    cursor: pointer;
    text-transform: uppercase;
    white-space: nowrap;
    outline: none;
    border: 1px solid transparent;
    .border-radius(1);
    .text-select-disabled();
    -webkit-appearance: none;
    -webkit-tap-highlight-color: transparent;

    &.icon-only {
        border-radius: 100%;
    }

    * {
        // We want clickEvent.target will be the root element
        pointer-events: none;
    }

    & > span {
        display: flex;
        flex-direction: row;
        align-items: center;
    }
    &.align-start > span {
        justify-content: flex-start;
    }
    &.align-center > span {
        justify-content: center;
    }
    &.align-end > span {
        justify-content: flex-end;
    }

    .use-dimension(@dim) {
        &.icon-only {
            & > span {
                .fix-dimensions(@dim);
            }
        }

        &:not(.icon-only) {
            & > span {
                height: round(@dim);
                padding: 0 round((@dim / 2));

                & > :not(:last-child) {
                    margin-right: round((@dim / 3));
                }
            }
        }
    }

    // SIZES
    &.size-small {
        .font-button-small();
        .use-dimension(@line-height-button-small * @font-size-button-small);
    }
    &.size-medium {
        .font-button();
        .use-dimension(@line-height-button * @font-size-button);
    }
    &.size-large {
        .font-button-large();
        .use-dimension(@line-height-button-large * @font-size-button-large);
    }

    &:not(.disabled) {
        &.appearance-solid {
            color: @gray-white;
        }

        &.appearance-outline {
            border: 1px solid currentColor;
        }

        .use-background(@color) {
            &.read-only {
                background: @color;
            }

            &:not(.read-only) {
                .background-interactive(@color);
            }
        }

        .use-color(@color) {
            &.read-only {
                color: @color;
            }

            &:not(.read-only) {
                .color-tinge-interactive(@color);
            }
        }

        // APPEARANCE SOLID
        &.appearance-solid-primary {
            .use-background(@color-primary);
        }
        &.appearance-solid-accent {
            .use-background(@color-accent);
        }
        &.appearance-solid-neutral {
            .use-background(@color-neutral);
        }
        &.appearance-solid-success {
            .use-background(@color-success);
        }
        &.appearance-solid-danger {
            .use-background(@color-danger);
        }
        &.appearance-solid-caution {
            .use-background(@color-caution);
        }
        &.appearance-solid-info {
            .use-background(@color-info);
        }

        // APPEARANCE TEXT & OUTLINE
        &.appearance-text-primary,
        &.appearance-outline-primary {
            .use-color(@color-primary);
        }
        &.appearance-text-accent,
        &.appearance-outline-accent {
            .use-color(@color-accent);
        }
        &.appearance-text-neutral,
        &.appearance-outline-neutral {
            .use-color(@color-neutral);
        }
        &.appearance-text-success,
        &.appearance-outline-success {
            .use-color(@color-success);
        }
        &.appearance-text-danger,
        &.appearance-outline-danger {
            .use-color(@color-danger);
        }
        &.appearance-text-caution,
        &.appearance-outline-caution {
            .use-color(@color-caution);
        }
        &.appearance-text-info,
        &.appearance-outline-info {
            .use-color(@color-info);
        }
    }

    &.disabled {
        cursor: not-allowed;
        color: @gray-twilight;

        &.appearance-solid {
            background: @gray-light-A3;
        }

        &.appearance-outline {
            border: 1px solid @gray-light-A3;
        }
    }

    &.read-only {
        cursor: default;
    }
}
