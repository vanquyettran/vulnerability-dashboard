import './NoticeBox.less';
import React, {ReactNode} from 'react';
import Icon from '../icon/Icon';

export interface NoticeBoxProps {
    children?: ReactNode,
    message?: string,
    type?: 'success' | 'error' | 'warn' | 'info',
    size?: 'large' | 'medium' | 'small',
    dismiss?: (() => void) | null,
}

export default function NoticeBox(
    {
        children,
        message,
        type = 'info',
        size = 'medium',
        dismiss = null,
    }: NoticeBoxProps,
) {
    const getIconName = () => {
        switch (type) {
            case 'success':
                return 'tick';
            case 'error':
                return 'caution-circle';
            case 'warn':
                return 'caution-circle';
            case 'info':
                return 'info-circle';
        }
    };

    const getTypeClass = () => {
        switch (type) {
            case 'success':
                return 'notice-success';
            case 'error':
                return 'notice-error';
            case 'warn':
                return 'notice-warn';
            case 'info':
                return 'notice-info';
        }
    };

    const getSizeClass = () => {
        switch (size) {
            case 'large':
                return 'size-large';
            case 'medium':
                return 'size-medium';
            case 'small':
                return 'size-small';
        }
    };

    return (
        <div className={['NoticeBox', getTypeClass(), getSizeClass()]}>
            <Icon name={getIconName()!}/>
            <div className="message">
                {children !== null && children !== undefined ? children : message}
            </div>
            {
                dismiss !== null &&
                <button
                    className="dismiss-button"
                    type="button"
                    onClick={() => dismiss()}
                >
                    <Icon name="times"/>
                </button>
            }
        </div>
    );
}
