import './TextArea.less';
import React, {useState} from 'react';

export interface TextAreaProps {
    value: string,
    setValue: (value: string) => void,
    rows?: number,
    multipleLines?: boolean,
    onFocus?: React.EventHandler<React.FocusEvent<HTMLTextAreaElement>>,
    onBlur?: React.EventHandler<React.FocusEvent<HTMLTextAreaElement>>,
}

export default function TextArea(
    {
        value,
        setValue,
        rows = 3,
        multipleLines = false,
        onFocus = () => undefined,
        onBlur = () => undefined,
    }: TextAreaProps,
) {
    const [focused, setFocused] = useState(false);

    const handleChange: React.EventHandler<React.ChangeEvent<HTMLTextAreaElement>> = (ev) => {
        if (multipleLines) {
            setValue(ev.target.value);
        } else {
            setValue(ev.target.value.replace(/\n/g, ''));
        }
    };

    const handleKeydown: React.EventHandler<React.KeyboardEvent<HTMLTextAreaElement>> = (ev) => {
        if (ev.key === 'Enter' && !multipleLines) {
            ev.preventDefault();
            const target = ev.target as HTMLTextAreaElement;
            const form = target.form;
            if (form !== null) {
                const submitButton = form.querySelector(
                    'button[type="submit"], input[type="submit"]',
                ) as HTMLButtonElement | HTMLInputElement;

                if (submitButton !== null) {
                    submitButton.click();
                }
            }
        }
    };

    return (
        <div
            className={[
                'TextArea',
                focused && 'focused',
            ]}
        >
            <textarea
                value={value}
                onChange={handleChange}
                onKeyDown={handleKeydown}
                onFocus={(ev) => {
                    setFocused(true);
                    onFocus(ev);
                }}
                onBlur={(ev) => {
                    setFocused(false);
                    onBlur(ev);
                }}
                rows={rows}
            />
        </div>
    );
}
