// PLACEHOLDER
.placeholder(@rules) {
    &::-webkit-input-placeholder {
        @rules();
    }
    &:-moz-placeholder {
        @rules();
    }
    &::-moz-placeholder {
        @rules();
    }
    &:-ms-input-placeholder {
        @rules();
    }
}


// APPEARANCE
.appearance(@value) {
    -webkit-appearance: @value;
    -moz-appearance: @value;
    appearance: @value;
}


// TEXT SELECT
.text-select-disabled() {
    user-select: none;
    -webkit-user-select: none;
    -moz-user-select: none;
    -khtml-user-select: none;
    -ms-user-select: none;
}


// CLAIM LINES
.claim-lines(@lines: 2) {
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: normal;
    display: -webkit-box;
    line-clamp: @lines;
    -webkit-line-clamp: @lines;
    -webkit-box-orient: vertical;
}
.fix-lines(@lines: 2, @line-height) {
    .claim-lines(@lines);
    line-height: @line-height;
    height: @lines * @line-height;
}
.max-lines(@lines: 2, @line-height) {
    .claim-lines(@lines);
    line-height: @line-height;
    max-height: @lines * @line-height;
}


// WIDTH HEIGHT
.fix-width(@width) {
    width: @width;
    min-width: @width;
    max-width: @width;
}
.fix-height(@height) {
    height: @height;
    min-height: @height;
    max-height: @height;
}
.fix-dimensions(@dim) {
    .fix-width(@dim);
    .fix-height(@dim);
}


// GRID
.grid-item(@cols, @space, @start: 1) {
    width: calc(100% / @cols - @space + @space / @cols);
    float: left;

    &:not(:nth-child(@{cols}n + @{start})) {
        margin-left: @space;
    }

    @cols_plus: @cols + @start;
    &:nth-child(n + @{cols_plus}) {
        margin-top: @space;
    }

    &:nth-child(@{cols}n + @{start}) {
        clear: left;
    }
}

