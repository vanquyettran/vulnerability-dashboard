import {useRecoilState} from 'recoil';
import buildStore from './_buildStore';
import {repoData} from './atoms';
import {IRepoStore} from './interfaces';
import createDraftList from 'main/models/factory/createDraftList';
import ListCreateParcel from 'main/api/list/ListCreateParcel';
import useListStore from './useListStore';

export default function useRepoStore(): IRepoStore {
    const store = buildStore(useRecoilState(repoData));
    const listStore = useListStore();

    return {
        ...store,
        ajaxCreate: {
            ...store.ajaxCreate,
            run: (parcel) => {
                return new Promise((resolve, reject) => {
                    store.ajaxCreate.run(parcel)
                        .then((repo) => {
                            const draftLists = [
                                'Open',
                                'Confirmed',
                                'False Positive',
                                'Fixed',
                            ].map(title => createDraftList({title}));

                            // Create lists sequentially:
                            // to maintain the order
                            // and AjaxAction does not support parallel running
                            draftLists.reduce((promise, list) => {
                                return promise.finally(() => {
                                    return listStore.ajaxCreate.run(new ListCreateParcel(repo.id, list));
                                });
                            }, Promise.resolve());
                        })
                        .catch((error) => {
                            reject(error);
                        });
                });
            }
        },
        ajaxDelete: {
            ...store.ajaxDelete
            // TODO: Make delete CASCADE
        },
    };
}
