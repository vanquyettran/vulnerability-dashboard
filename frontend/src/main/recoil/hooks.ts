import {useRecoilState} from 'recoil';
import buildStore from './buildStore';
import {cardData, listData, repoData} from './atoms';
import {ICardStore, IListStore, IRepoStore} from './interfaces';
import createEmptyList from 'main/models/factory/createEmptyList';
import ListCreateParcel from 'main/api/list/ListCreateParcel';

export function useRepoStore(): IRepoStore {
    const store = buildStore(useRecoilState(repoData));
    const listStore = useListStore();

    return {
        ...store,
        ajaxCreate: {
            ...store.ajaxCreate,
            run: (parcel) => {
                return new Promise((resolve, reject) => {
                    store.ajaxCreate.run(parcel)
                        .then((repo) => {
                            const promises = [
                                'Open',
                                'Confirmed',
                                'False Positive',
                                'Fixed',
                            ].map(title => {
                                const list = createEmptyList();
                                list.title = title;
                                return listStore.ajaxCreate.run(new ListCreateParcel(repo.id, list));
                            });

                            Promise.allSettled(promises)
                                .finally(() => {
                                    resolve(repo);
                                });
                        })
                        .catch((error) => {
                            reject(error);
                        });
                });
            }
        }
    };
}

export function useListStore(): IListStore {
    return buildStore(useRecoilState(listData));
}

export function useCardStore(): ICardStore {
    return buildStore(useRecoilState(cardData));
}
