import IEntity from 'main/models/interfaces/IEntity';
import IRepo from 'main/models/interfaces/IRepo';
import IList from 'main/models/interfaces/IList';
import ICard from 'main/models/interfaces/ICard';
import Parcel from 'libs/http-request/Parcel';
import ResponseError from 'libs/http-request/ResponseError';

export interface IEntityData<T extends IEntity> {
    byId: {[key: string]: T},
    allIds: string[]
}

export interface IRepoData extends IEntityData<IRepo> {}

export interface IListData extends IEntityData<IList> {}

export interface ICardData extends IEntityData<ICard> {}

export type AjaxState = {
    inProgress: boolean,
    error: ResponseError | null,
};

export type AjaxAction<P> = {
    run: (parcel: Parcel<P>) => Promise<P>,
    state: AjaxState
};

export interface IEntityStore<T extends IEntity> {
    data: IEntityData<T>,
    entities: T[],
    findById: (id: T['id']) => T | undefined,
    ajaxList: AjaxAction<T[]>,
    ajaxRead: AjaxAction<T>,
    ajaxCreate: AjaxAction<T>,
    ajaxDelete: AjaxAction<T>,
    ajaxUpdate: AjaxAction<T>,
}

export interface IRepoStore extends IEntityStore<IRepo> {}

export interface IListStore extends IEntityStore<IList> {}

export interface ICardStore extends IEntityStore<ICard> {}
