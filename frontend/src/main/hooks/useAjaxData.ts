import {useEffect, useState} from "react";
import Parcel from 'libs/http-request/Parcel';
import ResponseError from 'libs/http-request/ResponseError';
import Request from 'libs/http-request/Request';

export default function useAjaxData<T>(parcel: Parcel<T>, deps: any[] = [], skips: boolean = false)
    : [T | null, ResponseError | null, boolean] {
    const [data, setData] = useState<T | null>(null);
    const [error, setError] = useState<ResponseError | null>(null);
    const [isLoading, setIsLoading] = useState<boolean>(false);

    useEffect(() => {
        if (skips) {
            return;
        }

        setError(null);
        setIsLoading(true);

        Request.add(parcel)
            .then(data => {
                setData(data);
            })
            .catch(error => {
                setError(error);
            })
            .finally(() => {
                setIsLoading(false);
            });

        return () => {
            Request.destroy(parcel);
        };
    }, deps);

    return [data, error, isLoading];
}
