import AbstractParcel from "../AbstractParcel";
import ResponseResult from 'libs/http-request/ResponseResult';
import ResponseError from 'libs/http-request/ResponseError';
import IRepo from 'main/models/interfaces/IRepo';
import getRepoError from 'main/models/validation/getRepoError';

export default class RepoUpdateParcel extends AbstractParcel<IRepo> {
    private readonly repo: IRepo;

    constructor(repo: IRepo) {
        super();

        this.repo = repo;

        this.setRequestMethod('PUT');
        this.setEndpoint(`api/repo/${repo.id}`);
        this.setRequestHeader('Content-Type', 'application/json');
        this.setRequestBody(JSON.stringify({
            id: repo.id,
            name: repo.name,
        }));

        this.setPayloadError(getRepoError(repo));
        this.setExpectedResponseData(repo);
    }

    parseResponseError(response: any, xhr: XMLHttpRequest) {
        return new ResponseError(response?.message, xhr.status);
    }

    parseResponseResult(response: any) {
        return new ResponseResult(this.repo);
    }
}
