import AbstractParcel from "../AbstractParcel";
import ResponseResult from 'libs/http-request/ResponseResult';
import ResponseError from 'libs/http-request/ResponseError';
import ICard from 'main/models/interfaces/ICard';
import validateCard from 'main/models/validation/validateCard';

export default class CardUpdateParcel extends AbstractParcel<ICard> {
    private readonly card: ICard;

    constructor(card: ICard) {
        super();

        this.card = card;

        this.setRequestMethod('PUT');
        this.setEndpoint(`api/card/${card.id}`);
        this.setRequestHeader('Content-Type', 'application/json');
        this.setRequestBody(JSON.stringify({
            id: card.id,
            text: card.text,
            note: card.note,
        }));

        this.setPayloadValidationMessage(validateCard(card));
        this.setExpectedResponseData(card);
    }

    parseResponseError(response: any, xhr: XMLHttpRequest) {
        return new ResponseError(response?.message, xhr.status);
    }

    parseResponseResult(response: any) {
        return new ResponseResult(this.card);
    }
}
