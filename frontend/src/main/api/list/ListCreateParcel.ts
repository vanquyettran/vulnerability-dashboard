import AbstractParcel from "../AbstractParcel";
import ResponseResult from 'libs/http-request/ResponseResult';
import ResponseError from 'libs/http-request/ResponseError';
import IList from 'main/models/interfaces/IList';
import validateList from 'main/models/validation/validateList';
import {uuid} from 'libs/utils/string';

export default class ListCreateParcel extends AbstractParcel<IList> {
    private readonly repoId: string;

    constructor(list: IList) {
        super();

        this.repoId = list.repoId;

        this.setRequestMethod('POST');
        this.setEndpoint(`api/repo/${list.repoId}/list`);
        this.setRequestHeader('Content-Type', 'application/json');
        this.setRequestBody(JSON.stringify({
            title: list.title,
        }));

        this.setPayloadValidationMessage(validateList(list));

        // Use for test
        this.setMockResponseData({...list, id: uuid()});
    }

    parseResponseError(response: any, xhr: XMLHttpRequest) {
        return new ResponseError(response?.message, xhr.status);
    }

    parseResponseResult(response: any) {
        return new ResponseResult({
            id: response.id,
            title: response.title,
            repoId: this.repoId,
        });
    }
}
