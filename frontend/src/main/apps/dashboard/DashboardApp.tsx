import './DashboardApp.less';
import React, {useContext} from 'react';
import useRequest from 'main/hooks/useRequest';
import IRepo from 'main/interfaces/IRepo';
import RepoListParcel from 'main/api/repo/RepoListParcel';
import RepoContext from 'main/store/repo/RepoContext';
import RepoItem from 'main/apps/dashboard/repo-item/RepoItem';
import Spinner from 'uikit/components/spinner/Spinner';
import NoticeBox from 'uikit/components/notice-box/NoticeBox';
import __ from 'main/i18n';
import RepoList from 'main/apps/dashboard/repo-list/RepoList';

export default function DashboardApp() {

    const repoStore = useContext(RepoContext);

    const {
        inProgress: isReposLoading,
        error: repoLoadingError,
    } = useRequest<IRepo[]>(new RepoListParcel(), {
        onSuccess: data => {
            repoStore.add(...data);
        }
    });

    const repos = repoStore.data.allIds.map(id => repoStore.data.byId[id]);

    return (
        <div className="DashboardApp">
            <div className="heading">
                <h2 className="title">{__('Your repos')}</h2>
                {
                    isReposLoading &&
                    <Spinner/>
                }
            </div>
            {
                repoLoadingError !== null &&
                <NoticeBox
                    type="error"
                    message={repoLoadingError.message}
                />
            }
            {
                repos.length > 0 &&
                <RepoList repos={repos}/>
            }
        </div>
    );
}
