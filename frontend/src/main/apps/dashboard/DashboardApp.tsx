import './DashboardApp.less';
import React, {useState} from 'react';
import RepoListParcel from 'main/api/repo/RepoListParcel';
import useAjaxData from 'main/hooks/useAjaxData';
import Spinner from 'uikit/components/spinner/Spinner';
import __ from 'main/i18n';
import Request from 'libs/http-request/Request';
import RepoCreateParcel from 'main/api/repo/RepoCreateParcel';
import IRepo from 'main/interfaces/IRepo';

export default function DashboardApp() {

    const [data, error, isLoading] = useAjaxData(new RepoListParcel(), []);

    const [repoName, setRepoName] = useState('');

    return <div className="DashboardApp">
        <h1 className="title">Dashboard</h1>
        {
            isLoading &&
            <Spinner/>
        }
        {
            error !== null &&
            <div className="error">{error}</div>
        }
        {
            data !== null &&
            <div className="repos">
                {
                    data.map((repo: IRepo) => {
                        return (
                            <div className="repo" key={repo.id}>
                                {repo.name}
                            </div>
                        );
                    })
                }
            </div>
        }
        <form
            onSubmit={ev => {
                ev.preventDefault();
                Request.add(new RepoCreateParcel({id: '', name: repoName}))
                    .then(data => {
                        console.log('Created:', data);
                        setRepoName('');
                    })
                    .catch(error => {
                        console.log('Error:', error);
                    })
            }}
        >
            <input
                type="text"
                value={repoName}
                onChange={ev => setRepoName(ev.target.value)}
            />
            <button
                type="submit"
            >
                {__('Create new Repo')}
            </button>
        </form>
    </div>;
}
