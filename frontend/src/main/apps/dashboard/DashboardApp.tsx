import './DashboardApp.less';
import React, {useEffect} from 'react';
// import useRequest from 'main/hooks/useRequest';
// import IRepo from 'main/interfaces/IRepo';
import RepoListParcel from 'main/api/repo/RepoListParcel';
import Spinner from 'uikit/components/spinner/Spinner';
import NoticeBox from 'uikit/components/notice-box/NoticeBox';
import __ from 'main/i18n';
import RepoList from 'main/apps/dashboard/repo-list/RepoList';
import {useRepoStore} from 'main/recoil/hooks';
import Request from 'libs/http-request/Request';

export default function DashboardApp() {

    const repoStore = useRepoStore();

    // const {
    //     inProgress: isReposLoading,
    //     error: repoLoadingError,
    // } = useRequest<IRepo[]>(new RepoListParcel(), {
    //     onSuccess: data => {
    //         repoStore.add(...data);
    //     }
    // });

    // console.log(repoStore.data);

    useEffect(() => {
        const parcel = repoStore.ajaxBulkAdd.run(new RepoListParcel());
        return () => {
            Request.destroy(parcel);
        };
    }, []);

    const repos = repoStore.data.allIds.map(id => repoStore.data.byId[id]);
    const {inProgress, error} = repoStore.ajaxBulkAdd.state;

    console.log('re-render');

    return (
        <div className="DashboardApp">
            <div className="heading">
                <h2 className="title">{__('Your repos')}</h2>
                {
                    inProgress &&
                    <Spinner/>
                }
            </div>
            {
                error !== null &&
                <NoticeBox
                    type="error"
                    message={error.message}
                />
            }
            {
                repos.length > 0 &&
                <RepoList repos={repos}/>
            }
        </div>
    );
}
