import './RepoCreateEditor.less';
import React, {useEffect, useMemo, useState} from 'react';
import Request from 'libs/http-request/Request';
import RepoCreateParcel from 'main/api/repo/RepoCreateParcel';
import RepoForm from '../repo-form/RepoForm';
import createDraftRepo from 'main/models/factory/createDraftRepo';
import IRepo from 'main/models/interfaces/IRepo';
import useRepoActions from 'main/store/repo/useRepoActions';

export default function RepoCreateEditor({onSuccess}: {onSuccess?: (repo: IRepo) => void}) {
    const repoActions = useRepoActions();

    const [draftRepo, setDraftRepo] = useState(createDraftRepo());

    const parcel = useMemo(() => {
        return new RepoCreateParcel(draftRepo);
    }, [draftRepo]);

    useEffect(() => {
        return () => {
            Request.destroy(parcel);
        };
    }, [parcel]);

    return (
        <div className="RepoCreateEditor">
            <RepoForm
                action={repoActions.ajaxCreate}
                parcel={parcel}
                values={draftRepo}
                setValues={setDraftRepo}
                onSuccess={onSuccess}
            />
        </div>
    );
}
