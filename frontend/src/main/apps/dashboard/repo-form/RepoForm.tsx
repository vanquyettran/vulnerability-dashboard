import './RepoForm.less';
import React, {useState} from 'react';
import TextInput from 'uikit/components/text-input/TextInput';
import __ from 'main/i18n';
import {AjaxAction} from 'main/recoil/interfaces';
import IRepo from 'main/interfaces/IRepo';
import Parcel from 'libs/http-request/Parcel';

export default function RepoForm(
    {values, setValues, action, parcel, onSuccess}: {
        values: IRepo,
        setValues: React.Dispatch<React.SetStateAction<IRepo>>,
        action: AjaxAction<IRepo>,
        parcel: Parcel<IRepo>,
        onSuccess?: (repo: IRepo) => void,
    }
) {

    const {inProgress, error} = action.state;

    return (
        <form
            className="RepoForm"
            onSubmit={(ev) => {
                ev.preventDefault();
                if (!inProgress) {
                    action.run(parcel, onSuccess);
                }
            }}
        >
            <TextInput
                value={values.name}
                setValue={name => {
                    setValues({...values, name});
                }}
            />
            {
                error !== null &&
                <div className="error">
                    {error.message}
                </div>
            }
            <button
                type="submit"
                disabled={inProgress}
            >
                {inProgress ? __('Saving...') : __('Save')}
            </button>
        </form>
    );
}
