import './RepoUpdateEditor.less';
import React, {useEffect, useMemo, useState} from 'react';
import IRepo from 'main/models/interfaces/IRepo';
import RepoUpdateParcel from 'main/api/repo/RepoUpdateParcel';
import {useRepoStore} from 'main/recoil/hooks';
import Request from 'libs/http-request/Request';
import RepoForm from '../repo-form/RepoForm';

export default function RepoUpdateEditor({repo, onSuccess}: { repo: IRepo, onSuccess?: (repo: IRepo) => void }) {

    const repoStore = useRepoStore();

    const [draftRepo, setDraftRepo] = useState({...repo});

    const parcel = useMemo(() => {
        return new RepoUpdateParcel(draftRepo);
    }, [draftRepo]);

    useEffect(() => {
        return () => {
            Request.destroy(parcel);
        };
    }, [parcel]);

    return (
        <div className="RepoUpdateEditor">
            <RepoForm
                action={repoStore.ajaxUpdate}
                parcel={parcel}
                values={draftRepo}
                setValues={setDraftRepo}
                onSuccess={onSuccess}
            />
        </div>
    );
}
