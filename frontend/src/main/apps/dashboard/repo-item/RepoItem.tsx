import './RepoItem.less';
import React, {useState} from 'react';
import IRepo from 'main/models/interfaces/IRepo';
import Icon from 'uikit/components/icon/Icon';
import RepoUpdateEditor from '../repo-update-editor/RepoUpdateEditor';
import RepoDeleteButton from '../repo-delete-button/RepoDeleteButton';
import {Link} from 'react-router-dom';
import routes from 'main/routing/routes';

export default function RepoItem({repo}: { repo: IRepo }) {

    const [isEditing, setIsEditing] = useState(false);

    return (
        <div className="RepoItem">
            {!isEditing ? (
                <div className="view">
                    <div className="name">
                        <Link to={routes.kanban.getUrl(repo.id)}>
                            {repo.name}
                        </Link>
                    </div>
                    <button
                        type="button"
                        onClick={() => {
                            setIsEditing(true);
                        }}
                    >
                        <Icon name="pencil"/>
                    </button>
                    <RepoDeleteButton repo={repo}/>
                </div>
            ) : (
                <RepoUpdateEditor
                    repo={repo}
                    onSuccess={() => {
                        setIsEditing(false);
                    }}
                />
            )}
        </div>
    );
}
