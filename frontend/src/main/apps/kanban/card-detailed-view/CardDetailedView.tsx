import './CardDetailedView.less';
import React, {useState} from 'react';
import ICard from 'main/models/interfaces/ICard';
import TextArea from 'uikit/components/text-area/TextArea';
import useCardActions from 'main/store/card/useCardActions';
import TextInput from 'uikit/components/text-input/TextInput';
import CardUpdateParcel from 'main/api/card/CardUpdateParcel';
import __ from 'main/i18n';
import Button from 'uikit/components/button/Button';
import useListData from 'main/store/list/useListData';
import Icon from 'uikit/components/icon/Icon';

export default function CardDetailedView({card, onClose}: {card: ICard, onClose: () => void}) {
    const {ajaxDraftUpdate} = useCardActions();
    const [draftCard, setDraftCard] = useState({...card});
    const listData = useListData();
    const list = listData.findById(card.listId);

    return (
        <div className="CardDetailedView">
            <div className="heading">
                <TextArea
                    value={draftCard.text}
                    setValue={text => {
                        setDraftCard(draftCard => ({...draftCard, text}));
                    }}
                    onBlur={() => {
                        ajaxDraftUpdate.run(new CardUpdateParcel(draftCard));
                    }}
                />
                <Button
                    title={__('Close')}
                    iconOnly
                    icon="times"
                    appearance="text-neutral"
                    onClick={() => {
                        onClose();
                    }}
                />
            </div>
            <div className="meta">
                {list && (
                    <div className="status" title={__('Not implemented yet')}>
                        <span>{list.title}</span>
                        <Icon name="caret-down"/>
                    </div>
                )}
            </div>
            <div className="body">
                <label>{__('Notes')}</label>
                <TextArea
                    value={draftCard.note}
                    setValue={note => {
                        setDraftCard(draftCard => ({...draftCard, note}));
                    }}
                    onBlur={() => {
                        ajaxDraftUpdate.run(new CardUpdateParcel(draftCard));
                    }}
                    placeholder={__('Add notes...')}
                />
            </div>
        </div>
    );
}
