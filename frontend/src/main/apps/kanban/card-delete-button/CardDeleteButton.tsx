import './CardDeleteButton.less';
import React, {useEffect, useMemo, useState, useRef} from 'react';
import useCardStore from 'main/recoil/useCardStore';
import Icon from 'uikit/components/icon/Icon';
import ConfirmationDialog from 'uikit/components/confirmation-dialog/ConfirmationDialog';
import ICard from 'main/models/interfaces/ICard';
import CardDeleteParcel from 'main/api/card/CardDeleteParcel';
import Request from 'libs/http-request/Request';
import __ from 'main/i18n';
import Dropdown from 'uikit/components/dropdown/Dropdown';

export default function CardDeleteButton({card}: { card: ICard }) {

    const cardStore = useCardStore();

    const [showsConfirmation, setShowsConfirmation] = useState(false);

    const parcel = useMemo(() => new CardDeleteParcel(card), [card]);

    useEffect(() => {
        return () => {
            Request.destroy(parcel);
        };
    }, [parcel]);

    const buttonRef = useRef(null);

    return (
        <>
            <button
                className="CardDeleteButton"
                onClick={() => {
                    setShowsConfirmation(true);
                }}
                ref={buttonRef}
            >
                <Icon name="trash"/>
            </button>
            {showsConfirmation && buttonRef.current !== null && (
                <Dropdown
                    opener={buttonRef.current}
                    close={() => {
                        setShowsConfirmation(false);
                    }}
                >
                    <ConfirmationDialog
                        confirm={() => {
                            cardStore.ajaxDelete.run(parcel);
                        }}
                        cancel={() => {
                            setShowsConfirmation(false);
                        }}
                        title={__('Delete card')}
                        message={__('Are you sure you want to remove this card? This action cannot be undone.')}
                    />
                </Dropdown>
            )}
        </>
    );
}
