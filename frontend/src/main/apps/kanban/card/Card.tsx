import './Card.less';
import React, {useState, Dispatch, SetStateAction} from 'react';
import ICard from 'main/models/interfaces/ICard';
import Icon from 'uikit/components/icon/Icon';
import CardUpdateEditor from '../card-update-editor/CardUpdateEditor';
import CardDeleteButton from '../card-delete-button/CardDeleteButton';
import {Draggable, DraggableProvided, DraggableStateSnapshot} from 'react-beautiful-dnd';

export default function Card(
    {
        card,
        index,
        setSelectedCardId,
    }: {
        card: ICard,
        index: number,
        setSelectedCardId: Dispatch<SetStateAction<ICard['id'] | null>>
    }) {
    const [isEditing, setIsEditing] = useState(false);

    return (
        <Draggable draggableId={card.id} index={index}>
            {(provided: DraggableProvided, snapshot: DraggableStateSnapshot) => (
                <div
                    className={['Card', Boolean(snapshot.isDragging) && 'dragging']}
                    ref={provided.innerRef}
                    {...provided.draggableProps}
                    {...provided.dragHandleProps}
                >
                    {!isEditing ? (
                        <div className="view">
                            <div
                                className="name"
                                onClick={() => {
                                    setSelectedCardId(card.id);
                                }}
                            >
                                {card.text} - {card.id}
                            </div>
                            <button
                                type="button"
                                onClick={() => {
                                    setIsEditing(true);
                                }}
                            >
                                <Icon name="pencil"/>
                            </button>
                            <CardDeleteButton card={card}/>
                        </div>
                    ) : (
                        <CardUpdateEditor
                            card={card}
                            onSuccess={() => {
                                setIsEditing(false);
                            }}
                            onCancel={() => {
                                setIsEditing(false);
                            }}
                        />
                    )}
                </div>
            )}
        </Draggable>
    );
}
