import './Lane.less';
import React, {useEffect} from 'react';
import IList from 'main/models/interfaces/IList';
import useCardStore from 'main/recoil/useCardStore';
import CardListParcel from 'main/api/card/CardListParcel';
import Request from 'libs/http-request/Request';
import Card from 'main/apps/kanban/card/Card';
import CardCreateButton from 'main/apps/kanban/card-create-button/CardCreateButton';
import {useDrop} from 'react-dnd';

export default function Lane({list}: { list: IList }) {

    const cardStore = useCardStore();

    useEffect(() => {
        const parcel = new CardListParcel(list.id);
        cardStore.ajaxList.run(parcel);

        return () => {
            Request.destroy(parcel);
        };
    }, [list]);

    const [{isDragOver}, laneRef] = useDrop({
        accept: 'CARD',
        canDrop: (item, monitor) => {
            return true;
        },
        collect: (monitor) => ({
            isDragOver: monitor.isOver(),
        })
    });

    console.log('re-render list', list.title);

    return (
        <div
            className={['Lane', isDragOver && 'is-drag-over']}
            ref={laneRef}
        >
            <h3 className="title">
                {list.title}
            </h3>
            <ul>
                {
                    cardStore.entities
                        .filter(card => card.listId === list.id)
                        .map(card => (
                            <li key={card.id}>
                                <Card card={card}/>
                            </li>
                        ))
                }
            </ul>
            <CardCreateButton listId={list.id}/>
        </div>
    );
}
