import './Lane.less';
import React, {useEffect} from 'react';
import List from 'main/models/interfaces/List';
import CardListParcel from 'main/api/card/CardListParcel';
import Request from 'libs/http-request/Request';
import Card from 'main/apps/kanban/card/Card';
import CardCreateButton from 'main/apps/kanban/card-create-button/CardCreateButton';
import {Droppable, DroppableProvided, DroppableStateSnapshot} from 'react-beautiful-dnd';
import useCardActions from 'main/store/card/useCardActions';
import {filterableCards} from 'main/store/card/selectors';
import {useRecoilValue} from 'recoil';

export default function Lane({list}: {list: List}) {
    const cardActions = useCardActions();
    const cards = useRecoilValue(filterableCards({listId: list.id}));

    useEffect(() => {
        const parcel = new CardListParcel(list.id);
        cardActions.ajaxList.run(parcel);

        return () => {
            Request.destroy(parcel);
        };
    }, [list]);

    console.log('re-render list', list.title);

    return (
        <Droppable droppableId={list.id}>
            {(provided: DroppableProvided, snapshot: DroppableStateSnapshot) => (
                <div
                    className={['Lane', Boolean(snapshot.isDraggingOver) && 'is-drag-over']}
                    ref={provided.innerRef}
                    {...provided.droppableProps}
                >
                    <h3 className="title">
                        {list.title}
                    </h3>
                    <div className="content">
                        {
                            cards
                                .map((card, index) => (
                                    <Card key={card.id} card={card} index={index}/>
                                ))
                        }
                    </div>
                    {provided.placeholder}
                    <CardCreateButton listId={list.id}/>
                </div>
            )}
        </Droppable>
    );
}
