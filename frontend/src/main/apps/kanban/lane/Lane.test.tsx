import React from 'react';
import {render, waitFor} from '@testing-library/react';
import Lane from './Lane';
import TestProvider from 'main/TestProvider';
import Request from 'libs/http-request/Request';
import IList from 'main/models/interfaces/IList';
import createDraftList from 'main/models/factory/createDraftList';
import createDraftCard from 'main/models/factory/createDraftCard';
import {DragDropContext} from 'react-beautiful-dnd';
import {act} from 'react-dom/test-utils';

describe('<Lane/>', () => {
    const myRender = (list: IList) => {
        const screen = render(
            <TestProvider>
                <DragDropContext onDragEnd={() => undefined}>
                    <Lane list={list}/>
                </DragDropContext>
            </TestProvider>,
        );

        return {screen};
    };

    const list = createDraftList({id: 'a', title: 'Open', repoId: 'b'});

    beforeEach(() => {
        Request.setTestMockQueue([
            createDraftCard({id: 'a', text: 'Saturn', listId: list.id}),
            createDraftCard({id: 'b', text: 'Mercury', listId: list.id}),
            createDraftCard({id: 'c', text: 'Earth', listId: list.id}),
            createDraftCard({id: 'd', text: 'Neptune', listId: list.id}),
        ]);
    });

    it('renders title', async () => {
        await act(async () => {
            const {screen} = myRender(list);
            const title = screen.getByText(list.title);
            expect(title).toBeInTheDocument();
        });
    });

    it('renders cards', async () => {
        await act(async () => {
            const {screen} = myRender(list);

            await waitFor(() => {
                expect(screen.getByText('Saturn')).toBeInTheDocument();
                expect(screen.getByText('Mercury')).toBeInTheDocument();
                expect(screen.getByText('Earth')).toBeInTheDocument();
                expect(screen.getByText('Neptune')).toBeInTheDocument();
            });
        });
    });
});
